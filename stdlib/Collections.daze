is Collections;

struct Stack<T> {
  contents :: []T,
  size :: Int
}

implement Stack {
  fn new<T>() :: Self {
    Self.contents = []T{};
    Self.size = 0;
  }

  fn push(value :: T) :: Self {
    Self.contents <- value;
    Self.size++;
  }

  fn pop() :: Int {
    index = Self.size() - 1;
    ret Self.contents[index.int()];
  }

  fn size() :: Int {
    ret Self.size;
  }
}